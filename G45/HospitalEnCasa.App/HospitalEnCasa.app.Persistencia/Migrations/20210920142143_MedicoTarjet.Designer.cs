// <auto-generated />
using System;
using HospitalEnCasa.app.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalEnCasa.app.Persistencia.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210920142143_MedicoTarjet")]
    partial class MedicoTarjet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cedula")
                        .HasColumnType("int");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<int>("genero")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("cedula")
                        .IsUnique();

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Medico", b =>
                {
                    b.HasBaseType("HospitalEnCasa.app.Dominio.Persona");

                    b.Property<string>("nombre_hospital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tarjeta_profesional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tarjeta_profesional");

                    b.HasDiscriminator().HasValue("Medico");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Paciente", b =>
                {
                    b.HasBaseType("HospitalEnCasa.app.Dominio.Persona");

                    b.Property<int>("latitud")
                        .HasColumnType("int");

                    b.Property<int>("longitud")
                        .HasColumnType("int");

                    b.Property<int?>("medico_asignadoId")
                        .HasColumnType("int");

                    b.HasIndex("medico_asignadoId");

                    b.HasDiscriminator().HasValue("Paciente");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Paciente", b =>
                {
                    b.HasOne("HospitalEnCasa.app.Dominio.Medico", "medico_asignado")
                        .WithMany()
                        .HasForeignKey("medico_asignadoId");

                    b.Navigation("medico_asignado");
                });
#pragma warning restore 612, 618
        }
    }
}
